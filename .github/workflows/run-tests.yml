# vim: sw=2
name: Run tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: ./.github/actions/cmake
        with:
          qt_version: 5.15.2
          use_qt6: OFF
          modules: ""

      - name: Build
        run: cmake --build ${{github.workspace}}/build --parallel "$(nproc)"

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure -j"$(nproc)"

  build6:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: ./.github/actions/cmake
        with:
          qt_version: 6.5.0
          use_qt6: ON
          modules: qtserialport qtwebsockets
          additional_cmake_args: -DWITH_LDAP=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --parallel "$(nproc)"

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure -j"$(nproc)"

  clang-tidy:
    runs-on: ubuntu-22.04
    env:
      CC: clang
      CXX: clang++
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: ./.github/actions/cmake
        with:
          qt_version: 6.5.0
          use_qt6: ON
          additional_cmake_args: -DCMAKE_GLOBAL_AUTOGEN_TARGET=ON -DCMAKE_AUTOGEN_ORIGIN_DEPENDS=OFF

      - name: Build autogenerated stuff
        run: cmake --build ${{github.workspace}}/build --parallel "$(nproc)" --target autogen

      - name: Get clang-tidy-diff
        run: curl -JO https://raw.githubusercontent.com/llvm/llvm-project/main/clang-tools-extra/clang-tidy/tool/clang-tidy-diff.py

      - name: Generate compile_commands.json for clang-tidy
        run: jq '. | map(select(.file | test("autogen") or test("necrolog") | not))' build/compile_commands.json > compile_commands.json

      - name: Run clang-tidy
        run: |
          BASE_REF="${{github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before}}"
          git fetch --depth=1 origin "$BASE_REF"
          readarray -t CHANGED_FILES < <(git diff --name-only "$BASE_REF" | grep 'cpp$')
          echo "Changed files:"
          printf '%s\n' "${CHANGED_FILES[@]}"
          printf '%s\n' "${CHANGED_FILES[@]}" | parallel --verbose --jobs "$(nproc)" clang-tidy --quiet --warnings-as-errors=*
